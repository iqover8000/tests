worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # Include MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Map the request URI to a variable
    map $uri $uri_app_name {
        default "";
        ~^/app1(/|$) "app1";
        ~^/app2(/|$) "app2";
    }

    # Map the 'app' GET parameter to a variable, defaulting to $uri_app_name
    map $arg_app $app_name {
        default $uri_app_name;  # Use $uri_app_name if 'app' parameter is missing or empty
        "app1" "app1";
        "app2" "app2";
    }

    # Map the $app_name to the backend upstream
    map $app_name $backend_upstream {
        default          default_backend;  # Default upstream if no match
        "app1"           app1_backend;
        "app2"           app2_backend;
    }

    # Define upstream servers
    upstream app1_backend {
        server app1;
    }

    upstream app2_backend {
        server app2;
    }

    upstream default_backend {
        server app1;
        server app2;
    }

    # Define the server block
    server {
        listen 80;
        server_name _;

        # Proxy requests to the appropriate backend
        location / {
            # Remove the prefix if necessary
            rewrite ^/(app1|app2)(/.*)$ $2 break;

            proxy_pass http://$backend_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}
